name: build
on: [push]

jobs:
  build:
    name: Build plugin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@master
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.17'
      - name: Run tests
        run: go test ./...
      - name: Build Linux binary
        run: go build -o dist/linux/amd64/kubectl-login
        env:
          GOOS: linux
          GOARCH: amd64
      - name: Build Mac OS binary
        run: go build -o dist/darwin/amd64/kubectl-login
        env:
          GOOS: darwin
          GOARCH: amd64
      - name: Build Windows binary
        run: go build -o dist/windows/amd64/kubectl-login.exe
        env:
          GOOS: windows
          GOARCH: amd64
      - name: Upload kubectl-login Linux binary
        uses: actions/upload-artifact@v1
        with:
          name: kubectl-login-linux
          path: dist/linux/amd64/kubectl-login
      - name: Upload kubectl-login Mac OS binary
        uses: actions/upload-artifact@v1
        with:
          name: kubectl-login-macos
          path: dist/darwin/amd64/kubectl-login
      - name: Upload kubectl-login Windows binary
        uses: actions/upload-artifact@v1
        with:
          name: kubectl-login-windows
          path: dist/windows/amd64/kubectl-login.exe
      - name: Bump version and push tag
        id: tag_version
        uses: SOLIDSoftworks/semver-tags@1.0.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          tag-prefix: 'v'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag_version.outputs.semantic-version }}
          release_name:  v${{ steps.tag_version.outputs.semantic-version }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/darwin/amd64/kubectl-login
          asset_name: kubectl-login
